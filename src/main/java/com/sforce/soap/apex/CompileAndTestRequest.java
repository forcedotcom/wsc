package com.sforce.soap.apex;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class CompileAndTestRequest implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public CompileAndTestRequest() {}

    /**
     * element : checkOnly of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo checkOnly__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","checkOnly","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean checkOnly__is_set = false;

    private boolean checkOnly;

    public boolean getCheckOnly() {
      return checkOnly;
    }

    public boolean isCheckOnly() {
      return checkOnly;
    }

    public void setCheckOnly(boolean checkOnly) {
      this.checkOnly = checkOnly;
      checkOnly__is_set = true;
    }

    /**
     * element : classes of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo classes__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","classes","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean classes__is_set = false;

    private java.lang.String[] classes = new java.lang.String[0];

    public java.lang.String[] getClasses() {
      return classes;
    }

    public void setClasses(java.lang.String[] classes) {
      this.classes = classes;
      classes__is_set = true;
    }

    /**
     * element : deleteClasses of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo deleteClasses__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","deleteClasses","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean deleteClasses__is_set = false;

    private java.lang.String[] deleteClasses = new java.lang.String[0];

    public java.lang.String[] getDeleteClasses() {
      return deleteClasses;
    }

    public void setDeleteClasses(java.lang.String[] deleteClasses) {
      this.deleteClasses = deleteClasses;
      deleteClasses__is_set = true;
    }

    /**
     * element : deleteTriggers of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo deleteTriggers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","deleteTriggers","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean deleteTriggers__is_set = false;

    private java.lang.String[] deleteTriggers = new java.lang.String[0];

    public java.lang.String[] getDeleteTriggers() {
      return deleteTriggers;
    }

    public void setDeleteTriggers(java.lang.String[] deleteTriggers) {
      this.deleteTriggers = deleteTriggers;
      deleteTriggers__is_set = true;
    }

    /**
     * element : runTestsRequest of type {http://soap.sforce.com/2006/08/apex}RunTestsRequest
     * java type: com.sforce.soap.apex.RunTestsRequest
     */
    private static final com.sforce.ws.bind.TypeInfo runTestsRequest__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","runTestsRequest","http://soap.sforce.com/2006/08/apex","RunTestsRequest",0,1,true);

    private boolean runTestsRequest__is_set = false;

    private com.sforce.soap.apex.RunTestsRequest runTestsRequest;

    public com.sforce.soap.apex.RunTestsRequest getRunTestsRequest() {
      return runTestsRequest;
    }

    public void setRunTestsRequest(com.sforce.soap.apex.RunTestsRequest runTestsRequest) {
      this.runTestsRequest = runTestsRequest;
      runTestsRequest__is_set = true;
    }

    /**
     * element : triggers of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo triggers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","triggers","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean triggers__is_set = false;

    private java.lang.String[] triggers = new java.lang.String[0];

    public java.lang.String[] getTriggers() {
      return triggers;
    }

    public void setTriggers(java.lang.String[] triggers) {
      this.triggers = triggers;
      triggers__is_set = true;
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, checkOnly__typeInfo, checkOnly, checkOnly__is_set);
       __typeMapper.writeObject(__out, classes__typeInfo, classes, classes__is_set);
       __typeMapper.writeObject(__out, deleteClasses__typeInfo, deleteClasses, deleteClasses__is_set);
       __typeMapper.writeObject(__out, deleteTriggers__typeInfo, deleteTriggers, deleteTriggers__is_set);
       __typeMapper.writeObject(__out, runTestsRequest__typeInfo, runTestsRequest, runTestsRequest__is_set);
       __typeMapper.writeObject(__out, triggers__typeInfo, triggers, triggers__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        __in.peekTag();
        if (__typeMapper.verifyElement(__in, checkOnly__typeInfo)) {
            setCheckOnly(__typeMapper.readBoolean(__in, checkOnly__typeInfo, boolean.class));
        }
        __in.peekTag();
        if (__typeMapper.isElement(__in, classes__typeInfo)) {
            setClasses((java.lang.String[])__typeMapper.readObject(__in, classes__typeInfo, java.lang.String[].class));
        }
        __in.peekTag();
        if (__typeMapper.isElement(__in, deleteClasses__typeInfo)) {
            setDeleteClasses((java.lang.String[])__typeMapper.readObject(__in, deleteClasses__typeInfo, java.lang.String[].class));
        }
        __in.peekTag();
        if (__typeMapper.isElement(__in, deleteTriggers__typeInfo)) {
            setDeleteTriggers((java.lang.String[])__typeMapper.readObject(__in, deleteTriggers__typeInfo, java.lang.String[].class));
        }
        __in.peekTag();
        if (__typeMapper.isElement(__in, runTestsRequest__typeInfo)) {
            setRunTestsRequest((com.sforce.soap.apex.RunTestsRequest)__typeMapper.readObject(__in, runTestsRequest__typeInfo, com.sforce.soap.apex.RunTestsRequest.class));
        }
        __in.peekTag();
        if (__typeMapper.isElement(__in, triggers__typeInfo)) {
            setTriggers((java.lang.String[])__typeMapper.readObject(__in, triggers__typeInfo, java.lang.String[].class));
        }
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[CompileAndTestRequest ");
      sb.append(" checkOnly=");
      sb.append("'"+com.sforce.ws.util.Verbose.toString(checkOnly)+"'\n");
      sb.append(" classes=");
      sb.append("'"+com.sforce.ws.util.Verbose.toString(classes)+"'\n");
      sb.append(" deleteClasses=");
      sb.append("'"+com.sforce.ws.util.Verbose.toString(deleteClasses)+"'\n");
      sb.append(" deleteTriggers=");
      sb.append("'"+com.sforce.ws.util.Verbose.toString(deleteTriggers)+"'\n");
      sb.append(" runTestsRequest=");
      sb.append("'"+com.sforce.ws.util.Verbose.toString(runTestsRequest)+"'\n");
      sb.append(" triggers=");
      sb.append("'"+com.sforce.ws.util.Verbose.toString(triggers)+"'\n");
      sb.append("]\n");
      return sb.toString();
    }
}
