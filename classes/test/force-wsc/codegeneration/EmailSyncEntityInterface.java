package com.sforce.soap.partner.wsc;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class EmailSyncEntity implements com.sforce.ws.bind.XMLizable , IEmailSyncEntity{

    /**
     * Constructor
     */
    public EmailSyncEntity() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : conflictResolution of type {urn:partner.soap.sforce.com}EmailSyncConflictResolution
     * java type: com.sforce.soap.partner.wsc.EmailSyncConflictResolution
     */
    private boolean conflictResolution__is_set = false;

    private com.sforce.soap.partner.wsc.EmailSyncConflictResolution conflictResolution;

    @Override
    public com.sforce.soap.partner.wsc.EmailSyncConflictResolution getConflictResolution() {
      return conflictResolution;
    }

    @Override
    public void setConflictResolution(com.sforce.soap.partner.wsc.IEmailSyncConflictResolution conflictResolution) {
      this.conflictResolution = (com.sforce.soap.partner.wsc.EmailSyncConflictResolution)conflictResolution;
      conflictResolution__is_set = true;
    }

    protected void setConflictResolution(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("conflictResolution", "urn:partner.soap.sforce.com","conflictResolution","urn:partner.soap.sforce.com","EmailSyncConflictResolution",1,1,true))) {
        setConflictResolution((com.sforce.soap.partner.wsc.EmailSyncConflictResolution)__typeMapper.readObject(__in, _lookupTypeInfo("conflictResolution", "urn:partner.soap.sforce.com","conflictResolution","urn:partner.soap.sforce.com","EmailSyncConflictResolution",1,1,true), com.sforce.soap.partner.wsc.EmailSyncConflictResolution.class));
      }
    }

    private void writeFieldConflictResolution(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("conflictResolution", "urn:partner.soap.sforce.com","conflictResolution","urn:partner.soap.sforce.com","EmailSyncConflictResolution",1,1,true), conflictResolution, conflictResolution__is_set);
    }

    /**
     * element : dataSetFilter of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean dataSetFilter__is_set = false;

    private java.lang.String dataSetFilter;

    @Override
    public java.lang.String getDataSetFilter() {
      return dataSetFilter;
    }

    @Override
    public void setDataSetFilter(java.lang.String dataSetFilter) {
      this.dataSetFilter = dataSetFilter;
      dataSetFilter__is_set = true;
    }

    protected void setDataSetFilter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("dataSetFilter", "urn:partner.soap.sforce.com","dataSetFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDataSetFilter(__typeMapper.readString(__in, _lookupTypeInfo("dataSetFilter", "urn:partner.soap.sforce.com","dataSetFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDataSetFilter(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("dataSetFilter", "urn:partner.soap.sforce.com","dataSetFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true), dataSetFilter, dataSetFilter__is_set);
    }

    /**
     * element : fieldMapping of type {urn:partner.soap.sforce.com}EmailSyncFieldMapping
     * java type: com.sforce.soap.partner.wsc.EmailSyncFieldMapping[]
     */
    private boolean fieldMapping__is_set = false;

    private com.sforce.soap.partner.wsc.EmailSyncFieldMapping[] fieldMapping = new com.sforce.soap.partner.wsc.EmailSyncFieldMapping[0];

    @Override
    public com.sforce.soap.partner.wsc.EmailSyncFieldMapping[] getFieldMapping() {
      return fieldMapping;
    }

    @Override
    public void setFieldMapping(com.sforce.soap.partner.wsc.IEmailSyncFieldMapping[] fieldMapping) {
      this.fieldMapping = castArray(com.sforce.soap.partner.wsc.EmailSyncFieldMapping.class, fieldMapping);
      fieldMapping__is_set = true;
    }

    protected void setFieldMapping(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("fieldMapping", "urn:partner.soap.sforce.com","fieldMapping","urn:partner.soap.sforce.com","EmailSyncFieldMapping",0,-1,true))) {
        setFieldMapping((com.sforce.soap.partner.wsc.EmailSyncFieldMapping[])__typeMapper.readObject(__in, _lookupTypeInfo("fieldMapping", "urn:partner.soap.sforce.com","fieldMapping","urn:partner.soap.sforce.com","EmailSyncFieldMapping",0,-1,true), com.sforce.soap.partner.wsc.EmailSyncFieldMapping[].class));
      }
    }

    private void writeFieldFieldMapping(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fieldMapping", "urn:partner.soap.sforce.com","fieldMapping","urn:partner.soap.sforce.com","EmailSyncFieldMapping",0,-1,true), fieldMapping, fieldMapping__is_set);
    }

    /**
     * element : matchPreference of type {urn:partner.soap.sforce.com}EmailSyncMatchPreference
     * java type: com.sforce.soap.partner.wsc.EmailSyncMatchPreference
     */
    private boolean matchPreference__is_set = false;

    private com.sforce.soap.partner.wsc.EmailSyncMatchPreference matchPreference;

    @Override
    public com.sforce.soap.partner.wsc.EmailSyncMatchPreference getMatchPreference() {
      return matchPreference;
    }

    @Override
    public void setMatchPreference(com.sforce.soap.partner.wsc.IEmailSyncMatchPreference matchPreference) {
      this.matchPreference = (com.sforce.soap.partner.wsc.EmailSyncMatchPreference)matchPreference;
      matchPreference__is_set = true;
    }

    protected void setMatchPreference(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("matchPreference", "urn:partner.soap.sforce.com","matchPreference","urn:partner.soap.sforce.com","EmailSyncMatchPreference",1,1,true))) {
        setMatchPreference((com.sforce.soap.partner.wsc.EmailSyncMatchPreference)__typeMapper.readObject(__in, _lookupTypeInfo("matchPreference", "urn:partner.soap.sforce.com","matchPreference","urn:partner.soap.sforce.com","EmailSyncMatchPreference",1,1,true), com.sforce.soap.partner.wsc.EmailSyncMatchPreference.class));
      }
    }

    private void writeFieldMatchPreference(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("matchPreference", "urn:partner.soap.sforce.com","matchPreference","urn:partner.soap.sforce.com","EmailSyncMatchPreference",1,1,true), matchPreference, matchPreference__is_set);
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean name__is_set = false;

    private java.lang.String name;

    @Override
    public java.lang.String getName() {
      return name;
    }

    @Override
    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("name", "urn:partner.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setName(__typeMapper.readString(__in, _lookupTypeInfo("name", "urn:partner.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("name", "urn:partner.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), name, name__is_set);
    }

    /**
     * element : recordTypeId of type {urn:partner.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean recordTypeId__is_set = false;

    private java.lang.String recordTypeId;

    @Override
    public java.lang.String getRecordTypeId() {
      return recordTypeId;
    }

    @Override
    public void setRecordTypeId(java.lang.String recordTypeId) {
      this.recordTypeId = recordTypeId;
      recordTypeId__is_set = true;
    }

    protected void setRecordTypeId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("recordTypeId", "urn:partner.soap.sforce.com","recordTypeId","urn:partner.soap.sforce.com","ID",1,1,true))) {
        setRecordTypeId(__typeMapper.readString(__in, _lookupTypeInfo("recordTypeId", "urn:partner.soap.sforce.com","recordTypeId","urn:partner.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldRecordTypeId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recordTypeId", "urn:partner.soap.sforce.com","recordTypeId","urn:partner.soap.sforce.com","ID",1,1,true), recordTypeId, recordTypeId__is_set);
    }

    /**
     * element : syncDirection of type {urn:partner.soap.sforce.com}EmailSyncDirection
     * java type: com.sforce.soap.partner.wsc.EmailSyncDirection
     */
    private boolean syncDirection__is_set = false;

    private com.sforce.soap.partner.wsc.EmailSyncDirection syncDirection;

    @Override
    public com.sforce.soap.partner.wsc.EmailSyncDirection getSyncDirection() {
      return syncDirection;
    }

    @Override
    public void setSyncDirection(com.sforce.soap.partner.wsc.IEmailSyncDirection syncDirection) {
      this.syncDirection = (com.sforce.soap.partner.wsc.EmailSyncDirection)syncDirection;
      syncDirection__is_set = true;
    }

    protected void setSyncDirection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("syncDirection", "urn:partner.soap.sforce.com","syncDirection","urn:partner.soap.sforce.com","EmailSyncDirection",1,1,true))) {
        setSyncDirection((com.sforce.soap.partner.wsc.EmailSyncDirection)__typeMapper.readObject(__in, _lookupTypeInfo("syncDirection", "urn:partner.soap.sforce.com","syncDirection","urn:partner.soap.sforce.com","EmailSyncDirection",1,1,true), com.sforce.soap.partner.wsc.EmailSyncDirection.class));
      }
    }

    private void writeFieldSyncDirection(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("syncDirection", "urn:partner.soap.sforce.com","syncDirection","urn:partner.soap.sforce.com","EmailSyncDirection",1,1,true), syncDirection, syncDirection__is_set);
    }

    /**
     * element : syncFollowed of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean syncFollowed__is_set = false;

    private boolean syncFollowed;

    @Override
    public boolean getSyncFollowed() {
      return syncFollowed;
    }

    @Override
    public boolean isSyncFollowed() {
      return syncFollowed;
    }

    @Override
    public void setSyncFollowed(boolean syncFollowed) {
      this.syncFollowed = syncFollowed;
      syncFollowed__is_set = true;
    }

    protected void setSyncFollowed(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("syncFollowed", "urn:partner.soap.sforce.com","syncFollowed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setSyncFollowed(__typeMapper.readBoolean(__in, _lookupTypeInfo("syncFollowed", "urn:partner.soap.sforce.com","syncFollowed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldSyncFollowed(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("syncFollowed", "urn:partner.soap.sforce.com","syncFollowed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), syncFollowed, syncFollowed__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EmailSyncEntity ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldConflictResolution(__out, __typeMapper);
      writeFieldDataSetFilter(__out, __typeMapper);
      writeFieldFieldMapping(__out, __typeMapper);
      writeFieldMatchPreference(__out, __typeMapper);
      writeFieldName(__out, __typeMapper);
      writeFieldRecordTypeId(__out, __typeMapper);
      writeFieldSyncDirection(__out, __typeMapper);
      writeFieldSyncFollowed(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setConflictResolution(__in, __typeMapper);
      setDataSetFilter(__in, __typeMapper);
      setFieldMapping(__in, __typeMapper);
      setMatchPreference(__in, __typeMapper);
      setName(__in, __typeMapper);
      setRecordTypeId(__in, __typeMapper);
      setSyncDirection(__in, __typeMapper);
      setSyncFollowed(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "conflictResolution", conflictResolution);
      toStringHelper(sb, "dataSetFilter", dataSetFilter);
      toStringHelper(sb, "fieldMapping", fieldMapping);
      toStringHelper(sb, "matchPreference", matchPreference);
      toStringHelper(sb, "name", name);
      toStringHelper(sb, "recordTypeId", recordTypeId);
      toStringHelper(sb, "syncDirection", syncDirection);
      toStringHelper(sb, "syncFollowed", syncFollowed);
    }


    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
